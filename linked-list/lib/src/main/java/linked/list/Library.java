/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package linked.list;

public class Library {
    public boolean someLibraryMethod() {
        return true;
    }




}
class Node <T> {
    T data;
    Node next;

    public Node(T data) {
        this.data = data;
        this.next = null;
    }
}
class  LinkedList <T> {
    Node <T> head;
    public LinkedList() {
        this.head = null;
    }

    public void  insert(T data) {
        Node <T> newNode = new  <T> Node( data);
        if (head == null) {
            head = newNode;
        } else {
            Node current = head;
            while (current.next != null) {
                current = current.next;
            }
            current.next = newNode;
        }
    }
    public boolean includes(T target) {
        Node<T> current = head;

        while (current != null) {
            if (current.data == target) {
                return true;
            }
            current = current.next;
        }

        return false;
    }
    public String toString() {
        Node current = head;
        String output = "";

        while (current != null) {
            output += "{" + current.data + "} -> ";
            current = current.next;
        }

        return output + "NULL";
    }
    public int length(){
        Node current = head;
        int counter=0;
        while (current != null) {
            counter++;
            current = current.next;
        }
        return counter;
        }
    public int index(T data){
        Node current = head;
        int index=0;
        int counter=0;
        while (current != null) {
            counter++;
            if(data.equals(current.data)){
                index=counter;
            }
            current=current.next;
        }
        return index-1;
    }
    public void remove(int index){
        Node current = head;
        int counter=0;
        while (current != null) {
            if(counter==index){

            }
        }
        }

  }